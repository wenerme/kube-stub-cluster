replicaCount: 1

image:
  repository: filebrowser/filebrowser
  pullPolicy: IfNotPresent
  tag: ""

config: |
  {
    "port": 80,
    "baseURL": "",
    "address": "",
    "log": "stdout",
    "database": "/database.db",
    "root": "/srv"
  }
initScript: |
  echo http://mirrors.sjtug.sjtu.edu.cn/alpine/v3.13/main > /etc/apk/repositories
  apk add --no-cache jq
  alias fb="/filebrowser -c /.filebrowser.json"
  [ -e $(jq -r .database /.filebrowser.json) ] || fb config init
  [ ! -e /mnt/conf/setting.json ] || {
    fb config export /tmp/out.json
    jq -s 'reduce .[] as $x ({}; . * $x)' /tmp/out.json /mnt/conf/setting.json > /tmp/in.json
    fb config import /tmp/in.json
    rm -f /tmp/out.json /tmp/in.json
    echo Setting Importted
  }
  fb

setting:

configMapName:
persistent:
  claimName: ''

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths: [ ]
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }
