apiVersion: apps/v1
kind: Deployment
metadata:
  name: verdaccio
  labels:
    app: verdaccio
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  replicas: 1
  template:
    metadata:
      name: verdaccio
      labels:
        app: verdaccio
    spec:
      initContainers:
      - name: take-ownership
        image: alpine
        imagePullPolicy: IfNotPresent
        command: [ 'chown', '10001:10001', '/verdaccio/storage' ]
        volumeMounts:
        - mountPath: /verdaccio/storage
          name: storage
        securityContext:
          runAsUser: 0
      containers:
      - name: verdaccio
        image: verdaccio/verdaccio:5.26.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: web
        livenessProbe:
          httpGet:
            path: /-/ping
            port: web
        env:
        - name: VERDACCIO_PORT
          value: '8080'
        volumeMounts:
        - mountPath: /verdaccio/storage
          name: storage
          readOnly: false
        - mountPath: /verdaccio/conf
          name: config
          readOnly: true
        - mountPath: /secret
          name: secret
          readOnly: true
        securityContext:
          runAsUser: 10001
      volumes:
      - name: storage
        hostPath:
          path: /data/ns/dev-system/verdaccio/storage
      - name: config
        configMap:
          name: verdaccio-config
      - name: secret
        secret:
          secretName: verdaccio-secret
      securityContext:
        runAsUser: 10001
        fsGroup: 10001
      restartPolicy: Always
  selector:
    matchLabels:
      app: verdaccio

---

apiVersion: v1
kind: Service
metadata:
  name: verdaccio
  labels:
    app: verdaccio
spec:
  selector:
    app: verdaccio
  ports:
  - port: 80
    name: web
    targetPort: web
