apiVersion: apps/v1
kind: Deployment
metadata:
  name: frpc-local
  labels:
    app: frpc-local
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  replicas: 1
  template:
    metadata:
      name: frpc-local
      labels:
        app: frpc-local
    spec:
      containers:
      - name: frpc-local
        image: local/frpc:0.53.2
        imagePullPolicy: IfNotPresent
        command:
        - frpc
        - -c
        - /etc/frp/frpc.toml
        ports:
        - containerPort: 22
          name: ssh
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        - containerPort: 7400
          name: dashboard
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        envFrom:
        - secretRef:
            # frpc_name, frpc_sk, frps_server_addr, frps_token
            name: frpc-local-env
        volumeMounts:
        - mountPath: /etc/frp/
          name: conf
      volumes:
      - name: conf
        configMap:
          name: frpc-local-conf
      restartPolicy: Always
  selector:
    matchLabels:
      app: frpc-local
---

apiVersion: v1
kind: Service
metadata:
  name: frpc-local
  labels:
    app: frpc-local
spec:
  selector:
    app: frpc-local
  ports:
  - port: 22
    name: ssh
    targetPort: ssh
  - port: 80
    name: http
    targetPort: http
  - port: 443
    name: https
    targetPort: https
  - port: 7400
    name: dashboard
    targetPort: dashboard

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: frpc-local-conf
  labels:
    app: frpc-local
data:
  frpc.toml: |
    serverAddr = "{{.Envs.frps_server_addr}}"
    token = "{{.Envs.frps_token}}"
    serverPort = 443
    protocol = "wss"

    webServer.addr = "0.0.0.0"
    webServer.port = 7400
    webServer.user = "admin"
    webServer.password = "admin"

    transport.useEncryption = true
    transport.useCompression = true

    [[proxies]]
    name = "{{.Envs.frpc_name}}.ssh"
    type = "stcp"
    secretKey = "{{.Envs.frpc_sk}}"
    localIP = "{{.Envs.HOST_IP}}"
    localPort = 22

    [[proxies]]
    name = "{{.Envs.frpc_name}}.http"
    type = "stcp"
    secretKey = "{{.Envs.frpc_sk}}"
    localIP = "haproxytech-ingress.haproxy-controller"
    localPort = 80

    [[proxies]]
    name = "{{.Envs.frpc_name}}.https"
    type = "stcp"
    secretKey = "{{.Envs.frpc_sk}}"
    localIP = "haproxytech-ingress.haproxy-controller"
    localPort = 443

    [[proxies]]
    name = "{{.Envs.frpc_name}}.prometheus"
    type = "stcp"
    secretKey = "{{.Envs.frpc_sk}}"
    localIP = "prometheus-service.monitoring"
    localPort = 9090
